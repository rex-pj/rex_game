//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "flashcard_file")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: Option<String>,
    pub file_name: String,
    pub content_type: String,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub data: Vec<u8>,
    pub created_date: DateTimeWithTimeZone,
    pub updated_date: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::flashcard::Entity")]
    Flashcard,
}

impl Related<super::flashcard::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Flashcard.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
